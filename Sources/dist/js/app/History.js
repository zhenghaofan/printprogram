define(["knockout","app/Stage","app/Util"],function(e,t,n){var r=function(){this.doc=e.observable(null),this.stage=t,this.init()};return r.prototype={init:function(){this.doc(this.stage.curDoc()),n.Event.addEventListener("changDoc",this.changDoc,this),n.Event.addEventListener("undo",this.undo,this),n.Event.addEventListener("redo",this.redo,this),this.listener()},changDoc:function(e,t){this.doc(t),t&&!t._history&&(t._history=[],t._history.push(t.getData()),t._historyIndex=t._history.length-1)},redo:function(){var e=this.doc();if(e&&e._historyIndex<e._history.length-1){var t=++e._historyIndex;e.loadData(e._history[t]),this.stage.updateCanvas()}},undo:function(){var e=this.doc();if(e&&e._historyIndex>0){var t=--e._historyIndex;e.loadData(e._history[t]),this.stage.updateCanvas()}},pushHistory:function(){var e=this.doc();console.log(e),e&&(e._history.splice(e._historyIndex+1,e._history.length-e._historyIndex-1,e.getData()),e._history.length>20&&e._history.shift(),e._historyIndex=e._history.length-1)},listener:function(){n.Event.addEventListener("pushHistory",this.pushHistory,this),n.Event.addEventListener("afterAddLine",this.pushHistory,this),n.Event.addEventListener("afterAddRect",this.pushHistory,this)}},new r});