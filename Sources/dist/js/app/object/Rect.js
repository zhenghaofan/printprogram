define(["knockout","mapping"],function(e,t){var n=function(n,r){var i=this;i.cvs=document.createElement("canvas"),i.ctx=i.cvs.getContext("2d"),i.parent=n,i.id=null,i.name=e.observable("矩形"),i.type="rect",i.zIndex=e.observable(0),i.offsetX=e.observable(20),i.offsetY=e.observable(20),i.angle=e.observable(0),i.ratio=e.observable(1),i.selected=e.observable(!1),i.width=e.observable(400),i.height=e.observable(300),i.lineWidth=e.observable(2),i.lineColor=e.observable("#000000"),i.eventWithoutRedraw=e.computed(function(){return i.offsetX()+i.offsetY()+i.angle()}),i.halfLineWidth=e.computed(function(){return i.lineWidth()/2}),i.canvasWidth=e.computed(function(){return i.width()+i.lineWidth()}),i.canvasHeight=e.computed(function(){return i.height()+i.lineWidth()}),i.autoUpdateEvent=null,i.UI_INFO=e.computed({read:function(){return{UI_LEFT_TOP_X:i.offsetX(),UI_LEFT_TOP_Y:i.offsetY(),UI_RIGHT_BOTTOM_X:i.offsetX()+i.width()+i.lineWidth(),UI_RIGHT_BOTTOM_Y:i.offsetY()+i.height()+i.lineWidth()}},write:function(e){i.offsetX(e.UI_LEFT_TOP_X),i.offsetY(e.UI_LEFT_TOP_Y),i.width(e.UI_RIGHT_BOTTOM_X-e.UI_LEFT_TOP_X-i.lineWidth()),i.height(e.UI_RIGHT_BOTTOM_Y-e.UI_LEFT_TOP_Y-i.lineWidth())},owner:i}),i.init=function(){r=r||{};var e={include:["id","name","type","zIndex","offsetX","offsetY","angle","ratio","width","height","lineWidth","lineColor"]};r&&t.fromJS(r,e,i),i.redraw()},i.updateCanvas=function(){i.redraw(),i.parent&&i.parent.updateCanvas()},i.resizeCanvas=function(e,t){i.cvs.width=e,i.cvs.height=t,i.cvs.style.width=e+"px",i.cvs.style.height=e+"px"},i.redraw=function(){return i.resizeCanvas(i.canvasWidth(),i.canvasHeight()),i.ctx.beginPath(),i.ctx.lineWidth=i.lineWidth(),i.ctx.strokeStyle=i.lineColor(),i.ctx.rect(i.halfLineWidth(),i.halfLineWidth(),i.width(),i.height()),i.ctx.stroke(),i.cvs},i.isInPoint=function(e,t){return e=e||window.app.stage.mouseX(),t=t||window.app.stage.mouseY(),i.offsetX()<=e&&e<=i.offsetX()+i.width()+i.lineWidth()&&i.offsetY()<=t&&t<=i.offsetY()+i.height()+i.lineWidth()},i.addAutoUpdateEvent=function(){i.autoUpdateEvent&&(i.autoUpdateEvent=i.cache.subscribe(function(){i.updateCanvas()}))},i.removeAutoUpdateEvent=function(){console.log("rem"),i.autoUpdateEvent&&(i.autoUpdateEvent=i.autoUpdateEvent.dispose())},i.init()};return n});